import{_ as e,c as t,o as i,a4 as l}from"./chunks/framework.O_rXpL_w.js";const b=JSON.parse('{"title":"ES6面试问题","description":"","frontmatter":{"isTimeLine":true,"title":"ES6面试问题","date":"2020-03-22T00:00:00.000Z","tags":["面试","javascript"],"categories":["面试"],"head":[["script",{},"!function(p){\\"use strict\\";!function(t){var s=window,e=document,i=p,c=\\"\\".concat(\\"https:\\"===e.location.protocol?\\"https://\\":\\"http://\\",\\"sdk.51.la/js-sdk-pro.min.js\\"),n=e.createElement(\\"script\\"),r=e.getElementsByTagName(\\"script\\")[0];n.type=\\"text/javascript\\",n.setAttribute(\\"charset\\",\\"UTF-8\\"),n.async=!0,n.src=c,n.id=\\"LA_COLLECT\\",i.d=n;var o=function(){s.LA.ids.push(i)};s.LA?s.LA.ids&&o():(s.LA=p,s.LA.ids=[],o()),r.parentNode.insertBefore(n,r)}()}({\\"id\\":\\"Jgmg5avjAUvoyePS\\",\\"ck\\":\\"Jgmg5avjAUvoyePS\\",\\"hashMode\\":true});"]]},"headers":[],"relativePath":"bigWeb/js/es6.md","filePath":"bigWeb/js/es6.md","lastUpdated":1719297432000}'),r={name:"bigWeb/js/es6.md"};function s(o,a,n,c,d,h){return i(),t("div",{"data-pagefind-body":!0},a[0]||(a[0]=[l('<h1 id="es6面试问题" tabindex="-1">ES6面试问题 <a class="header-anchor" href="#es6面试问题" aria-label="Permalink to &quot;ES6面试问题&quot;">​</a></h1><h2 id="_1-es6是什么-为什么要学习它" tabindex="-1">1.ES6是什么，为什么要学习它 <a class="header-anchor" href="#_1-es6是什么-为什么要学习它" aria-label="Permalink to &quot;1.ES6是什么，为什么要学习它&quot;">​</a></h2><p>ES6是js新一代的语言标注,对js的核心内容进行了优化,拓展了许多原生方法,使js更加的规范</p><h2 id="_2-es5-es6区别" tabindex="-1">2.ES5,ES6区别 <a class="header-anchor" href="#_2-es5-es6区别" aria-label="Permalink to &quot;2.ES5,ES6区别&quot;">​</a></h2><ul><li>ES5泛指上一代语言标准</li><li>ES6泛指下一代语言标准 <ul><li>包含ES2015/2016/2017/2018等等</li></ul></li><li>ES2015指2015年发布的语言标注</li></ul><h2 id="_3-babel作用" tabindex="-1">3.babel作用 <a class="header-anchor" href="#_3-babel作用" aria-label="Permalink to &quot;3.babel作用&quot;">​</a></h2><p>将ES6转换为ES5的代码,以便兼容低版本的(不支持es6)浏览器</p><h2 id="_4-var-let-const" tabindex="-1">4.var/let/const <a class="header-anchor" href="#_4-var-let-const" aria-label="Permalink to &quot;4.var/let/const&quot;">​</a></h2><ul><li>全局作用域下var声明的变量会被挂载到window上</li><li>var 存在变量提升的问题</li><li>let/const 不会提升</li><li>let/const 有块级作用域</li></ul><h2 id="_5-字符串" tabindex="-1">5.字符串 <a class="header-anchor" href="#_5-字符串" aria-label="Permalink to &quot;5.字符串&quot;">​</a></h2><ul><li>模板字符串</li><li>扩展了一些方法</li></ul><h2 id="_6-array" tabindex="-1">6.Array <a class="header-anchor" href="#_6-array" aria-label="Permalink to &quot;6.Array&quot;">​</a></h2><ul><li>解构</li><li>扩展...</li><li>方法拓展</li></ul><h2 id="_7-object" tabindex="-1">7.Object <a class="header-anchor" href="#_7-object" aria-label="Permalink to &quot;7.Object&quot;">​</a></h2><ul><li>解构</li><li>扩展...</li><li>方法拓展</li><li>变量式声明属性</li></ul><h2 id="_8-function" tabindex="-1">8.Function <a class="header-anchor" href="#_8-function" aria-label="Permalink to &quot;8.Function&quot;">​</a></h2><ul><li>箭头函数</li><li>参数默认值</li></ul>',17)]))}const _=e(r,[["render",s]]);export{b as __pageData,_ as default};
